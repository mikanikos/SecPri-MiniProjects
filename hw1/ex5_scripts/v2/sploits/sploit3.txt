Sploit 3 explanation

In this target there is no clear vulnerability but it is quite easy to understand that problem is about the count variable and the check of count in function foo. If we manage to avoid that condition, we will be able to do the usual buffer overflow trick to execute our shellcode. The vulnerability is that a signed integer is parsed from the argument string but this is then used in memcpy with sizeof() and becomes an unsigned value. So, using a negative integer that, once converted to unsigned, is greater than the buffer size will do the trick. Since the size of the structure is 20 and the buffer has 240 bytes, we need to overflow a 4800 buffer in total. By using -214748124 (a number that, when multiplied by 20, gives 4816 when interpreted as an unsigned integer, a bit more than 4800 in order to do the buffer overflow) we can avoid the if check condition and write past the buffer, overwrite eip and execute our shellcode in the same way we did for target 1. Some attemps have been necessary to find the right value for the padding of NOPs but, after a few attemps, I got the shellcode.
