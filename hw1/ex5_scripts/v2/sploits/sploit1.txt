Sploit 1 explanation

The bug in target1 is evidently the strcpy operation which is performed without any check on the string paramater passed as argument. This is a simple and common case of buffer overflow attack. To esploit the vulnerability, I followed a similar approach as described in Chapter 11 of "The Ethical Hacker's Handbook". I needed to overflow the buffer and overwrite the return address to make it point to where our shellcode is. First, I checked the Extended Stack Pointer (esp) before the buffer creation in function foo with GDB; then, I started creating the string by using NOPs as padding (approximately half of the buffer), the shellcode (45 bytes) and finally a sequence of repeated stack pointer addresses (the stack point address checked before but slightly modified in order to point somewhere in the middle of the NOPs so that it will eventually get to the shellcode) to fill the rest of the buffer and do the alignment. I had to execute the sploit more times in order to find the right alignment by incrementing the padding of NOPs until I managed to get the shell.
